#! /Applications/Mathematica.app/Contents/MacOS/MathematicaScript -script

(* 1.53: If we delete a row and a column from a matrix of order n, then, of
course, the remaining elements form a matrix of order n âˆ’ 1. The determinant of
this matrix is called a minor of the original nth-order matrix (and also a
minor of its determinant D). If we delete the ith row and the jth column of D,
then the minor so obtained is denoted by Mij or Mij(D).

We now show that the relation (15):

    Aij = (-1)^(i + j) Mij

holds, so that the calculation of cofactors reduces to the calculation of the
corresponding minors.
*)

(* val detTermsIndices : 'a list list -> ((int * int) list) list
*)
detTermsIndices[m_List] := Module[
    {n, indices, rowIndices, colIndices},
    {n, n} = Dimensions[m];
    indices = Range[1, n];
    rowIndices = Permutations[indices];
    colIndices = Table[indices, n!];
    MapThread[(
        termRowIndices = #1;
        termColIndices = #2;
        MapThread[(
            termEltRow = #1;
            termEltCol = #2;
            {termEltRow, termEltCol}
            ) &,
            {termRowIndices, termColIndices}
        ]) &,
        {rowIndices, colIndices}
    ]
];

Inversions[list_List] := Block[
    {$ContextPath},
    Quiet[Needs["Combinatorica`"], {General::compat}];
    Combinatorica`Inversions[list]
];

(* val detTermIndicesToTerms
     : ((int * int) list) list
    -> 'a list list
    -> 'a list
*)
detTermIndicesToTerms[termIndices_List, m_List] := Module[
    { termRowIndices
    , termElements
    , signCoeficient
    , iRow
    , jCol
    , t
    },
    termRowIndices = termIndices[[All, 1]];
    termElements = Map[({iRow, jCol} = #; m[[iRow, jCol]]) &, termIndices];
    signCoeficient = Power[-1, Inversions[termRowIndices]];
    signCoeficient * (Times @@ termElements)
];

detTerms[m_List] :=
    Map[detTermIndicesToTerms[#, m] &, detTermsIndices[m]];

det[m_List] :=
    Total[detTerms[m]];

cofactorOfIJOfDetOf[m_List, iRow_Integer, jCol_Integer] := Module[
    { termIndices
    , termIndicesWithIJ
    , termsWithIJ
    },
    termIndices = detTermsIndices[m];
    termIndicesWithIJ = Select[termIndices, MemberQ[#, {iRow, jCol}]&];
    termsWithIJ = Map[detTermIndicesToTerms[#, m] &, termIndicesWithIJ];
    Total[termsWithIJ] / m[[iRow, jCol]]
];

{minDim, maxDim} = {3, 3};
{minElt, maxElt} = {1, 10};
n = RandomInteger[{minDim, maxDim}];
m = RandomInteger[{minElt, maxElt}, {n, n}];
i = RandomInteger[{1, n}];
j = RandomInteger[{1, n}];

cofactor = cofactorOfIJOfDetOf[m, i, j];
signCoeficient = Power[-1, i + j];
minors = Reverse[Map[Reverse, Minors[m]]];
minor = minors[[i, j]];

Print["             m: ", m];
Print["             i: ", i];
Print["             j: ", j];
Print["      cofactor: ", cofactor];
Print["signCoeficient: ", signCoeficient];
Print["     Minors[m]: ", Minors[m]];
Print["        minors: ", minors];
Print["         minor: ", minor];
Print[cofactor, " = ", signCoeficient * minor];
On[Assert];
Assert[cofactor == signCoeficient * minor];
